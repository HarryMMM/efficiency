#!/bin/bash
CURRENT_DIR=$(
    cd "$(dirname "$0")" || exit
    pwd
)
source "$CURRENT_DIR/../../config/system/profile"
# shellcheck source=$CUSTOM_PROFILE_PATH
source "$CUSTOM_PROFILE_PATH"
# shellcheck source=LOG_PRINTER_FILE
source "$LOG_PRINTER_FILE"
# shellcheck source=ARGS_TOOL_FILE
source "${ARGS_TOOL_FILE}"

base_path="$SCP_GROUP_DIR"
cd "$base_path" || exit

function help() {
    echo "default (none of above)"
}

skip_worktree() {
    project_dir="$(ls | grep -E 'scp-|ur-')"
    for dir in $project_dir; do
        {
            cur="${base_path}/${dir}"
            cd "$cur" && git update-index --skip-worktree pom.xml

        }
    done
}
unchange_pom_version() {
    local project_dir=''
    if [[ -z "$1" ]]; then
        read -r -p "You have not entered the project name. Please enter the project name or 'ALL' change the POM file of all projects): " -a pro
        if [[ "${pro[*]}" == "ALL" ]]; then
            project_dir="$(ls | grep -E "scp-|ur-")"
        else
            project_dir="$(ls | grep -E "${pro[*]}")"
        fi
    else
        project_dir="$(ls | grep -E "$1")"
    fi

    if [[ -z "${project_dir}" ]]; then
        log_info 'no project find,no changed.'
        exit 0
    fi
    for dir in $project_dir; do
        {
            cur="${base_path}/${dir}"
            cd "$cur" && git -c credential.helper= -c core.quotepath=false -c log.showSignature=false checkout HEAD -- pom.xml
        }
    done
}
change_pom_version() {
    local project=''
    if [[ -z "$1" ]]; then
        read -r -p "You have not entered the project name. Please enter the project name or 'ALL' change the POM file of all projects): " -a pro
        if [[ "${pro[*]}" == "ALL" ]]; then
            project=".*ur-.*\|.*scp-.*"
        else
            project=".*${pro[*]}.*"
            if [[ -z "$(ls | grep -E "${pro[*]}")" ]]; then
                log_info 'no project find,no changed.'
                exit 0
            fi
        fi
    else
        if [[ -z "$(ls | grep -E "$1")" ]]; then
            log_info 'no project find,no changed.'
            exit 0
        fi
        project=".*$1.*"
    fi

    find ${base_path} -maxdepth 1 -type d -regex "$project" | xargs -I {} find {} -type f -name pom.xml | xargs sed -i 's/${ur.env}-SNAPSHOT/1.0.0-SNAPSHOT/'
    find ${base_path} -maxdepth 1 -type d -regex "$project" | xargs -I {} find {} -type f -name pom.xml | xargs sed -i 's/${scp.version}/1.0.0-SNAPSHOT/'
    find ${base_path} -maxdepth 1 -type d -regex "$project" | xargs -I {} find {} -type f -name pom.xml | xargs sed -i 's/$/\r/'
    # skip_worktree
}

function main() {
    project=$(getArg -a "$@" -k project -l)
    if [[ -z "${project}" ]]; then
        project=$(getArg -a "$@" -k p)
    fi

    if [[ $(has_arg "$*" --change-pom-version) == "true" ]]; then
        change_pom_version "$project"
    elif [[ $(has_arg "$@" --unchange-pom-version) == "true" ]]; then
        unchange_pom_version "$project"
        # find "$base_path" -type f -name pom.xml | xargs git -c credential.helper= -c core.quotepath=false -c log.showSignature=false checkout HEAD --
        # find "$base_path" -type f -name pom.xml | xargs echo
        # find "$base_path" -type f -name pom.xml | xargs sed -i 's/$/\r/'
    else
        help
    fi
}
main "$*"
